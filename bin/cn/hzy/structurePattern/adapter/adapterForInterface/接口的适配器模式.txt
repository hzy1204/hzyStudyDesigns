当一个接口中定义了很多方法，而我们在实际开发中可能只需要用到里面的某一个或者某几个方法，
采用传统实现模式就必须要实现接口里面的所有方法，哪怕是空实现都还是要实现。

这个时候就可以采用对象的适配器模式，写一个抽象类去实现这个接口，在这个抽象类里面提供这个接口里面的所有方法的空实现，
然后我们只需要继承这个抽象类就可以了，需要具体实现什么方法就实现什么方法，随心所欲，为所欲为

本例中测试类的打印结果：

true
方法1的实现
true
方法2的实现

因为在本例中，每个类只实现了一个方法，当调用到没实现的那个方法时，就相当于调用到了父类的空实现
（千万注意：这里source1.method2();是调用不到SourceSub2里面的method2()的，它调用的是父类里面的空实现）